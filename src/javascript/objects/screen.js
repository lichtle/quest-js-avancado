const screen = {
  userProfile: document.querySelector(".profile-data"),
  renderUser(user) {
    // Perceba que o m√©todo user abaixo (previamente populado no arquivo objects/user.js) √© acompanhado de uma instru√ß√£o em Camel Case, pois √© assim que est√° escrito no objeto user (do arquivo objects/user.js)
    this.userProfile.innerHTML = `<div class="info">
  <img src="${user.avatarUrl}" alt="Foto de perfil do usu√°rio"> 
  <div class="data">
    <h1>${user.name ?? "N√£o possui nome de usu√°rio. üòì"}</h1>
    <p>${user.bio ?? "Este usu√°rio n√£o possui bio. üò¢"}</p>
    <br>
    <p><span class="follow">Seguidores:</span> ${
      user.followers ?? "Este usu√°rio n√£o tem seguidores. üò¢"
    }</p>
    <p><span class="follow">Seguindo:</span> ${
      user.following ?? "Este usu√°rio n√£o segue ningu√©m. üò¢"
    }</p>
  </div>
</div>`;

    let repositoriesItems = []; // Array a ser populado com reposit√≥rios

    user.repositories.forEach(
      (repo) =>
        (repositoriesItems += `<li><a href="${repo.html_url}" target="_blank">${repo.name}</a></li>`)
    );

    if (user.repositories.length > 0) {
      // Condi√ß√£o para verificar se o usu√°rio possui reposit√≥rios
      this.userProfile.innerHTML += ` <div class="repositories section">
                                        <h2>Reposit√≥rios</h2>
                                        <ul>${repositoriesItems}</ul>
                                      </div>`;
    }

    let eventsItems = [];

    let filteredEvents = user.events.filter((event) => {
      // Filtrando o array user.events - array acima populado somente com os itens que nos interessam (filtrados)
      return event.type === "CreateEvent" || event.type === "PushEvent"; // Itens de interesse (os que possuem type igual √† CreateEvent ou igual √† PushEvent)
    });

    filteredEvents.forEach((event) => {
      eventsItems += `<li><p>${event.repo.name} &#x2022; ${
        event.playload.commits[commits.length - 1].message
      }</p></li>`;
    });

    if (user.events.length > 0) {
      // Condi√ß√£o para verificar se o usu√°rio possui eventos
      this.userProfile.innerHTML += `<div class="events">
                                        <h2>Eventos</h2>
                                        <ul>${filteredEvents}</ul>
                                      </div>`;
    }
  },
  renderNotFound() {
    this.userProfile.innerHTML = "<h3>Usu√°rio n√£o encontrado</h3>";
  },
};

export { screen };
